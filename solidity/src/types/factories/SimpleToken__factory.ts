/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleToken, SimpleTokenInterface } from "../SimpleToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040805180820190915260038082526214d51560ea1b602090920191825261003b9160009161009a565b5060408051808201909152600c8082526b29b4b6b83632902a37b5b2b760a11b602090920191825261006f9160019161009a565b506002805460ff191681179055620f424060038190553360009081526004602052604090205561016d565b8280546100a690610133565b90600052602060002090601f0160209004810192826100c8576000855561010e565b82601f106100e157805160ff191683800117855561010e565b8280016001018555821561010e579182015b8281111561010e5782518255916020019190600101906100f3565b5061011a92915061011e565b5090565b5b8082111561011a576000815560010161011f565b600181811c9082168061014757607f821691505b60208210810361016757634e487b7160e01b600052602260045260246000fd5b50919050565b6106588061017c6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80633eaaf86b1161007657806395d89b411161005b57806395d89b411461015b578063a9059cbb14610163578063dd62ed3e1461017657600080fd5b80633eaaf86b1461011b57806370a082311461013257600080fd5b806306fdde03146100a8578063095ea7b3146100c657806323b872dd146100e9578063313ce567146100fc575b600080fd5b6100b06101af565b6040516100bd91906104a0565b60405180910390f35b6100d96100d4366004610511565b61023d565b60405190151581526020016100bd565b6100d96100f736600461053b565b6102a9565b6002546101099060ff1681565b60405160ff90911681526020016100bd565b61012460035481565b6040519081526020016100bd565b610124610140366004610577565b6001600160a01b031660009081526004602052604090205490565b6100b06103e9565b6100d9610171366004610511565b6103f6565b610124610184366004610599565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b600180546101bc906105cc565b80601f01602080910402602001604051908101604052809291908181526020018280546101e8906105cc565b80156102355780601f1061020a57610100808354040283529160200191610235565b820191906000526020600020905b81548152906001019060200180831161021857829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102989086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600460205260408120548211156102ce57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156102fe57600080fd5b6001600160a01b0384166000908152600460205260408120805484929061032690849061061c565b90915550506001600160a01b03841660009081526005602090815260408083203384529091528120805484929061035e90849061061c565b90915550506001600160a01b0383166000908152600460205260408120805484929061038b908490610633565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516103d791815260200190565b60405180910390a35060019392505050565b600080546101bc906105cc565b3360009081526004602052604081205482111561041257600080fd5b336000908152600460205260408120805484929061043190849061061c565b90915550506001600160a01b0383166000908152600460205260408120805484929061045e908490610633565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610298565b600060208083528351808285015260005b818110156104cd578581018301518582016040015282016104b1565b818111156104df576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461050c57600080fd5b919050565b6000806040838503121561052457600080fd5b61052d836104f5565b946020939093013593505050565b60008060006060848603121561055057600080fd5b610559846104f5565b9250610567602085016104f5565b9150604084013590509250925092565b60006020828403121561058957600080fd5b610592826104f5565b9392505050565b600080604083850312156105ac57600080fd5b6105b5836104f5565b91506105c3602084016104f5565b90509250929050565b600181811c908216806105e057607f821691505b60208210810361060057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561062e5761062e610606565b500390565b6000821982111561064657610646610606565b50019056fea164736f6c634300080d000a";

type SimpleTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleToken__factory extends ContractFactory {
  constructor(...args: SimpleTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleToken> {
    return super.deploy(overrides || {}) as Promise<SimpleToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleToken {
    return super.attach(address) as SimpleToken;
  }
  override connect(signer: Signer): SimpleToken__factory {
    return super.connect(signer) as SimpleToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleTokenInterface {
    return new utils.Interface(_abi) as SimpleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleToken {
    return new Contract(address, _abi, signerOrProvider) as SimpleToken;
  }
}
